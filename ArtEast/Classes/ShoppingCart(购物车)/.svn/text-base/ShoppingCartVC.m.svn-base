//
//  ShoppingCartVC.m
//  ArtEast
//
//  Created by yibao on 16/9/21.
//  Copyright © 2016年 北京艺宝网络文化有限公司. All rights reserved.
//

#import "ShoppingCartVC.h"
#import <MJRefresh.h>
#import "BaseWebVC.h"
#import "LoginVC.h"
#import "BaseCell.h"
#import "GoodsDetailVC.h"
#import "BaseNC.h"
#import "ShopCarModel.h"
#import "OrderConfirmVC.h"
#import "EditAddressVC.h"

#define TabHeadHeight 30
#define TabCellHeight 100
#define BottomHeight 50
#define InputTextWidth 44

@interface ShopCarTabCell : BaseCell<UITextFieldDelegate>
{
    UILabel *_goodsNameLabel; //名称
    UILabel *_goodsPropertyLabel; //规格
    UILabel *_goodsPromotionLabel; //促销
    UILabel *_goodsPriceLabel; //价格
    UITextField *_goodsNumTF;
}

@property (nonatomic,strong) UIImageView *imageV;
@property (nonatomic , retain)ShopCarModel *cellModel;
@property (nonatomic , retain)UIButton *selectBtn;

@end

@implementation ShopCarTabCell

- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        [self initWithCellViews];
    }
    return self;
}


- (void)initWithCellViews {
    _selectBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 45, TabCellHeight)];
    [_selectBtn setImage:[UIImage imageNamed:@"UnSelected"] forState:UIControlStateNormal];
    [_selectBtn setImage:[UIImage imageNamed:@"Selected"] forState:UIControlStateSelected];
    [self.contentView addSubview:_selectBtn];
    
    _imageV = [[UIImageView alloc]initWithFrame:CGRectMake(_selectBtn.maxX-5, (TabCellHeight-80)/2.0, 80, 80)];
    _imageV.contentMode = UIViewContentModeScaleAspectFill;
    _imageV.clipsToBounds = YES;
    _imageV.image = [UIImage imageNamed:@"GoodsDefault"];
    [self.contentView addSubview:_imageV];
    
    CGFloat labelWidth = (WIDTH-(_imageV.maxX+10)-10);
    
    _goodsNameLabel = [[UILabel alloc]initWithFrame:CGRectMake(_imageV.maxX+10, 8, labelWidth, 20)];
    _goodsNameLabel.text = @"婴儿新生彩棉八件套";
    _goodsNameLabel.font = kFont13Size;
    _goodsNameLabel.textColor = LightBlackColor;
    [self.contentView addSubview:_goodsNameLabel];
    
    _goodsPropertyLabel = [[UILabel alloc]initWithFrame:CGRectMake(_imageV.maxX+10, 35, labelWidth, 12)];
    _goodsPropertyLabel.text = @"红色 大号";
    _goodsPropertyLabel.textColor = PlaceHolderColor;
    _goodsPropertyLabel.font = kFont12Size;
    [self.contentView addSubview:_goodsPropertyLabel];
    
    _goodsPromotionLabel = [[UILabel alloc]initWithFrame:CGRectMake(_imageV.maxX+10, 52, labelWidth, 16)];
    //_goodsPromotionLabel.layer.borderColor = AppThemeColor.CGColor;
    //_goodsPromotionLabel.layer.borderWidth = 0.5;
    _goodsPromotionLabel.text = @"[减价]所有商品减价购买";
    _goodsPromotionLabel.textColor = AppThemeColor;
    _goodsPromotionLabel.font = kFont12Size;
    _goodsPromotionLabel.textAlignment = NSTextAlignmentCenter;
    [self.contentView addSubview:_goodsPromotionLabel];
    
    CGFloat btnWidth = MIN(40, (WIDTH-labelWidth/2.0-_imageV.maxX-10-InputTextWidth)/2.0);
    
    _goodsPriceLabel = [[UILabel alloc]initWithFrame:CGRectMake(_imageV.maxX+10, 72, labelWidth - btnWidth*2-InputTextWidth+5, 20)];
    _goodsPriceLabel.textColor = [UIColor colorWithRed:0.1255 green:0.1255 blue:0.1255 alpha:1.0];
    _goodsPriceLabel.text = @"¥199.00";
    _goodsPriceLabel.textColor = PriceColor;
    _goodsPriceLabel.font = kFont13Size;
    [self.contentView addSubview:_goodsPriceLabel];
    
    UIButton *reduceBtn = [[UIButton alloc]initWithFrame:CGRectMake(_goodsPriceLabel.maxX, _goodsPriceLabel.y, btnWidth, _goodsPriceLabel.height)];
    [reduceBtn addTarget:self action:@selector(reduceNumForCell:) forControlEvents:UIControlEventTouchUpInside];
    [self.contentView addSubview:reduceBtn];
    
    _goodsNumTF = [[UITextField alloc]initWithFrame:CGRectMake(reduceBtn.maxX, _goodsPriceLabel.y, InputTextWidth, _goodsPriceLabel.height)];
    _goodsNumTF.text = @"1";
    _goodsNumTF.textColor = LightBlackColor;
    _goodsNumTF.keyboardType = UIKeyboardTypeNumberPad;
    _goodsNumTF.textAlignment = NSTextAlignmentCenter;
    _goodsNumTF.font = kFont13Size;
    _goodsNumTF.delegate = self;
    _goodsNumTF.backgroundColor = [UIColor clearColor];
    [self.contentView addSubview:_goodsNumTF];
    
    NSLog(@"%f",(WIDTH-_goodsPriceLabel.maxX-10-InputTextWidth)/2.0);
    
    UIButton *addBtn = [[UIButton alloc]initWithFrame:CGRectMake(_goodsNumTF.maxX, _goodsPriceLabel.y, btnWidth, _goodsPriceLabel.height)];
    [addBtn addTarget:self action:@selector(addNumForCell:) forControlEvents:UIControlEventTouchUpInside];
    [self.contentView addSubview:addBtn];
    
    _goodsNumTF.height = 22;
    _goodsNumTF.centerY = addBtn.centerY;
    
    UIImageView *img = [[UIImageView alloc]initWithFrame:CGRectMake(_goodsNumTF.x-20, 0, 22, _goodsNumTF.height)];
    img.image = [UIImage imageNamed:@"Sub"];
    img.centerY = _goodsNumTF.centerY;
    [self.contentView addSubview:img];
    
    UIImageView *img1 = [[UIImageView alloc]initWithFrame:CGRectMake(_goodsNumTF.maxX, 0, 22, _goodsNumTF.height)];
    img1.image = [UIImage imageNamed:@"Add"];
    img1.centerY = _goodsNumTF.centerY;
    [self.contentView addSubview:img1];
}

- (void)setCellModel:(ShopCarModel *)cellModel{
    _cellModel = cellModel;
    _selectBtn.selected = cellModel.isSelected;
    
     [_imageV sd_setImageWithURL:[NSURL URLWithString:cellModel.thumbnail_url] placeholderImage:[UIImage imageNamed:@"GoodsDefault"]];
    _goodsNameLabel.text = [cellModel.name stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    _goodsPropertyLabel.text = cellModel.spec_info;
    _goodsPromotionLabel.text = cellModel.promotion;
    _goodsPriceLabel.text = [NSString stringWithFormat:@"¥%@",cellModel.buy_price];
    _goodsNumTF.text = [NSString stringWithFormat:@"%@",cellModel.quantity];
    
    NSDictionary *attributes = @{NSFontAttributeName: kFont12Size};
    CGSize contentSize = [cellModel.promotion boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, 16) options:NSStringDrawingUsesLineFragmentOrigin attributes:attributes context:nil].size;
    _goodsPromotionLabel.width = contentSize.width;
}

- (void)reduceNumForCell:(UIButton *)sender {
    
    if ([_goodsNumTF.text integerValue]<2) {
        return;
    }
    
    _cellModel.quantity = [NSString stringWithFormat:@"%ld",[_goodsNumTF.text integerValue]-1];
    
    [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载 //开始加载
    
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         [UserInfo share].userID, @"memberID",
                         _cellModel.ident, @"obj_ident",
                         @"goods", @"obj_type",
                         _cellModel.quantity, @"quantity",
                         nil];
    [[NetworkManager sharedManager] postJSON:URL_UpdateCartNum parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
        
        [JHHJView hideLoading]; //结束加载
        
        if (status == Request_Success) {
            _goodsNumTF.text = _cellModel.quantity;
            
            ShoppingCartVC *vc = (ShoppingCartVC *)[self viewController];
            [vc updateDataForUI];
            [vc.tableView reloadData];
        }
    }];
}


- (void)addNumForCell:(UIButton *)sender {
    
    if ([_goodsNumTF.text integerValue]+1>999) {
        return;
    }
    
    if ([_goodsNumTF.text integerValue]+1>[_cellModel.store integerValue]) {
        [Utils showToast:@"库存不足"];
        return;
    }
    
    _cellModel.quantity = [NSString stringWithFormat:@"%ld",[_goodsNumTF.text integerValue]+1];
    
    [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载 //开始加载
    
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         [UserInfo share].userID, @"memberID",
                         _cellModel.ident, @"obj_ident",
                         @"goods", @"obj_type",
                         _cellModel.quantity, @"quantity",
                         nil];
    
    [[NetworkManager sharedManager] postJSON:URL_UpdateCartNum parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
        
        [JHHJView hideLoading]; //结束加载
        
        if (status == Request_Success) {
            _goodsNumTF.text = _cellModel.quantity;
            
            ShoppingCartVC *vc = (ShoppingCartVC *)[self viewController];
            [vc updateDataForUI];
            [vc.tableView reloadData];
        }
    }];
    
}


- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    NSString *str = [textField.text stringByAppendingString:string ];
    if (string.length==0&&textField.text.length==1) { //控制数量最少为0
        textField.text = @"0";
        return NO;
    }
    
    if (str.length>3) { //数量最大只能是3位数的数量
        return NO;
    }
    if ([str integerValue]>999) { //数量最大是999
        textField.text = @"999";
        return NO;
    }
    if ([str integerValue]>[_cellModel.store integerValue]) {
        [Utils showToast:@"库存不足"];
        return NO;
    }
    if (string.length>0) { //控制输入的数字 是非0开始
        textField.text = [NSString stringWithFormat:@"%ld",(long)[str integerValue]];
        return NO;
    }
    
    return YES;
}

- (void)textFieldDidBeginEditing:(UITextField *)textField {
    UIView *vv = textField.superview.superview.superview;
    ShoppingCartVC *vc = (ShoppingCartVC *)[self viewController];
    CGRect frame = [vv convertRect:textField.superview.superview.frame toView:vc.view];
    vc.tempFrame = frame;
}

- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{
    self.cellModel.quantity = textField.text;
    return YES;
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    self.cellModel.quantity = textField.text;
    return YES;
}

@end

@interface ShoppingCartVC ()<UITableViewDelegate,UITableViewDataSource,RefreshDelegate>
{
    UIButton *_navRightBtn;
    UIButton *_selectAllBtn;
    UILabel *_selectLabel;
    UILabel *_priceLabel;
    UIButton *_createOrderBtn;
    UIView *bottomView;
    UIView *tabHeadView;
    
    NSMutableArray *_dataSource;
    NSMutableArray *_orderPromotionArr;
    
    CGFloat allPrice;
    NSInteger allCount;
    NSInteger allGoodsCount;
    NSString *allID;
    
    NSMutableArray *goodsIDArr;
}

@property (nonatomic,retain) DefaultView *defaultView; //默认视图
@property (nonatomic,retain) UIView *contentView; //购物车列表

@property (nonatomic,strong)NSMutableDictionary  *orderProView; //订单优惠视图

@end

@implementation ShoppingCartVC

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self getData];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"购物车";
    
    goodsIDArr = [NSMutableArray array];
    _dataSource = [NSMutableArray array];
    
    _navRightBtn = [[UIButton alloc]initWithFrame:CGRectMake(20, 20, 80, 44)];
    _navRightBtn.hidden = YES; //默认隐藏
    [_navRightBtn setTitle:@"清空" forState:UIControlStateNormal];
    _navRightBtn.titleLabel.font = kFont15Size;
    [_navRightBtn setTitleColor:kColorFromRGBHex(0x2a2a2a) forState:UIControlStateNormal];
    _navRightBtn.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;
    [_navRightBtn addTarget:self action:@selector(clearShoppingCart) forControlEvents:UIControlEventTouchUpInside];
    self.navItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:_navRightBtn];
    
    [self initViews]; //有数据
}

#pragma mark - init data

- (void)getData {
    
    self.tableView.tableFooterView = [[UIView alloc] init];
    
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         [UserInfo share].userID.length>0?[UserInfo share].userID:@"", @"memberID",
                         nil];
    
    [[NetworkManager sharedManager] postJSON:URL_GetCartList parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
        
        [self.tableView.mj_header endRefreshing];
        
        if (status == Request_Success) {
            if (![Utils isBlankString:responseData]) {
                
                _orderPromotionArr = [NSMutableArray array];
                
                if ([responseData[@"promotion"][@"order"] isKindOfClass:[NSDictionary class]]) {
                    NSDictionary *orderProDic = responseData[@"promotion"][@"order"];
                    NSArray *orderProArr = orderProDic.allKeys;
                    
                    [_orderPromotionArr removeAllObjects];
                    
                    for (NSString *key in orderProArr) {
                        NSDictionary *dic = orderProDic[key];
                        [_orderPromotionArr addObject:dic];
                    }
                }
                
                if ([responseData[@"object"][@"goods"] isKindOfClass:[NSArray class]]) {
                    NSArray *goodsArr = responseData[@"object"][@"goods"];
                    
                    NSDictionary *promotionDic = [NSDictionary dictionary];
                    NSArray *promotionKeyArr = [NSArray array];
                    if ([responseData[@"promotion"][@"goods"] isKindOfClass:[NSDictionary class]]) {
                        promotionDic = responseData[@"promotion"][@"goods"];
                        promotionKeyArr = promotionDic.allKeys;
                    }
                    
                    [_dataSource removeAllObjects];
                    
                    for (NSInteger i = 0; i < goodsArr.count; i ++) {
                        NSDictionary *goodsDic = goodsArr[i];
                        ShopCarModel *model = [[ShopCarModel alloc]init];
                        model.ident = goodsDic[@"obj_ident"];
                        model.quantity = goodsDic[@"quantity"];
                        
                        NSDictionary *dic = goodsDic[@"obj_items"][@"products"][0];
                        model.name = dic[@"name"];
                        model.goods_id = dic[@"goods_id"];
                        model.buy_price = dic[@"price"][@"buy_price"];
                        model.price = dic[@"price"][@"price"];
                        model.spec_info = dic[@"spec_info"];
                        model.store = dic[@"store"];
                        model.thumbnail_url = [NSString stringWithFormat:@"%@%@",PictureUrl,dic[@"thumbnail_url"]];
                        model.url = [NSString stringWithFormat:@"%@%@",PictureUrl,dic[@"url"]];
                        model.isSelected = NO;
                        
                        if (promotionKeyArr.count>0) {
                            //加促销信息
                            for (NSString *key in promotionKeyArr) {
                                if ([model.ident isEqualToString:key]) {
                                    model.promotion = [NSString stringWithFormat:@"[%@]%@",promotionDic[key][0][@"desc_tag"],promotionDic[key][0][@"desc"]];
                                    break;
                                }
                            }
                        }
                        
                        [_dataSource addObject:model];
                    }
                }
                
                if (_dataSource.count!=0) {
                    self.tableView.tableHeaderView = tabHeadView;
                    _navRightBtn.hidden = NO;
                    bottomView.hidden = NO;
                } else {
                    self.tableView.tableHeaderView = [[UIView alloc] init];
                    self.tableView.tableFooterView = _defaultView;
                    _defaultView.delegate = nil;
                    _defaultView.imgView.image = [UIImage imageNamed:@"ShoppingCarDefault"];
                    _defaultView.imgView.frame = CGRectMake(WIDTH/2-101, 0, 202, 90.5);
                    _defaultView.lab.text = @"去添加点什么吧";
                    
                    _navRightBtn.hidden = YES;
                    bottomView.hidden = YES;
                }
            }
        } else {
            if (![Utils getNetStatus]) {
                self.tableView.tableHeaderView = [[UIView alloc] init];
                self.tableView.tableFooterView = _defaultView;
                _defaultView.delegate = self;
                _defaultView.imgView.image = [UIImage imageNamed:@"NoNetwork"];
                _defaultView.imgView.frame = CGRectMake(WIDTH/2-50, 0, 100, 86.5);
                _defaultView.lab.text = @"网络状态待提升，点击重试";
                
                _navRightBtn.hidden = YES;
                bottomView.hidden = YES;
            }
        }
        
        [self updateDataForUI]; //再刷新界面
        [self.tableView reloadData];
    }];
}

//有网络了
- (void)netWorkAppear
{
    [super netWorkAppear];
    
    [self refresh];
}

#pragma mark - RefreshDelegate

- (void)refresh {
    NSLog(@"点击刷新");
    [self getData];
}

- (void)goVisit {
    //去逛逛跳转到分类
    self.tabBarController.selectedIndex = 2;
}

#pragma mark - init view

- (void)initViews {
    _contentView = [[UIView alloc] initWithFrame:CGRectMake(0, 64, WIDTH, HEIGHT-64)];
    [self.view addSubview:_contentView];
    
    CGFloat tabbarHeight = 49;
    if (_isTabbarHidder) {
        tabbarHeight = 0;
    }
    
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, HEIGHT-64-BottomHeight-tabbarHeight) style:UITableViewStyleGrouped];
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.backgroundColor = [UIColor clearColor];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.separatorColor = kColorFromRGBHex(0xE6E6E6);
    [_contentView addSubview:self.tableView];
    
    _defaultView = [[DefaultView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, HEIGHT-143)];
    _defaultView.delegate = self;
    
    //动画下拉刷新
    [self tableViewGifHeaderWithRefreshingBlock:^{
        [self getData];
    }];
    
    [self.tableView.mj_header beginRefreshing];
    
    tabHeadView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, TabHeadHeight)];
    NSArray *arr = @[@"原创设计",@"全场包邮",@"三十天无理由退货"];
    
    CGFloat width0 = [Utils getSizeByString:arr[0] AndFontSize:12].width;
    CGFloat width1 = [Utils getSizeByString:arr[1] AndFontSize:12].width;
    CGFloat width2 = [Utils getSizeByString:arr[2] AndFontSize:12].width;
    
    CGFloat offX = (WIDTH-10*3-width0-width1-width2)/4;
    
    
    for (NSInteger i = 0; i < arr.count; i ++) {
        
        UIButton *first1Btn = [UIButton buttonWithType:UIButtonTypeCustom];
        if (i==0) {
            first1Btn.frame = CGRectMake(offX, 0, 10+width0, tabHeadView.height);
        }
        if (i==1) {
            first1Btn.frame = CGRectMake(offX*2+10+width0, 0, 10+width1, tabHeadView.height);
        }
        if (i==2) {
            first1Btn.frame = CGRectMake(offX*3+10*2+width0+width1, 0, 10+width2, tabHeadView.height);
        }
        [first1Btn setTitle:arr[i] forState:UIControlStateNormal];
        first1Btn.titleLabel.font = kFont12Size;
        [first1Btn setImage:[UIImage imageNamed:@"Oval"] forState:UIControlStateNormal];
        [first1Btn setTitleColor:PlaceHolderColor forState:UIControlStateNormal];
        [tabHeadView addSubview:first1Btn];
    }
    self.tableView.tableFooterView = [[UIView alloc]init];
    
    bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, HEIGHT-BottomHeight-tabbarHeight-64, WIDTH, BottomHeight)];
    bottomView.hidden = YES;
    bottomView.backgroundColor = [UIColor whiteColor];
    bottomView.layer.borderColor = kColorFromRGBHex(0xE6E6E6).CGColor;
    bottomView.layer.borderWidth = 0.5;
    [_contentView addSubview:bottomView];
    
    _selectAllBtn = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 45, bottomView.height)];
    [_selectAllBtn setImage:[UIImage imageNamed:@"UnSelected"] forState:UIControlStateNormal];
    [_selectAllBtn setImage:[UIImage imageNamed:@"Selected"] forState:UIControlStateSelected];
    [_selectAllBtn addTarget:self action:@selector(selectAllGoods:) forControlEvents:UIControlEventTouchUpInside];
    [bottomView addSubview:_selectAllBtn];
    
    _selectLabel = [[UILabel alloc] initWithFrame:CGRectMake(_selectAllBtn.maxX, 0, 80, bottomView.height)];
    _selectLabel.text = @"已选 (0)";
    _selectLabel.font = kFont14Size;
    _selectLabel.adjustsFontSizeToFitWidth = YES;
    _selectLabel.textColor = [UIColor blackColor];
    [bottomView addSubview:_selectLabel];
    
    
    _createOrderBtn = [[UIButton alloc] initWithFrame:CGRectMake(WIDTH-WIDTH/4, 0, WIDTH/4, bottomView.height)];
    [_createOrderBtn setTitle:@"下单" forState:UIControlStateNormal];
    [_createOrderBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    _createOrderBtn.titleLabel.font = [UIFont systemFontOfSize:15];
    [_createOrderBtn addTarget:self action:@selector(_createOrderBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [bottomView addSubview:_createOrderBtn];
    
    _priceLabel = [[UILabel alloc] initWithFrame:CGRectMake(_selectLabel.maxX, 0, WIDTH-_selectLabel.maxX-_createOrderBtn.width-20, bottomView.height)];
    _priceLabel.textAlignment = NSTextAlignmentRight;
    _priceLabel.textColor = PriceColor;
    _priceLabel.text = @"¥524.00";
    _priceLabel.font = [UIFont systemFontOfSize:14];
    _priceLabel.adjustsFontSizeToFitWidth = YES;
    [bottomView addSubview:_priceLabel];
}

#pragma mark - UITableViewDelegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return _dataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    ShopCarTabCell *cell = [tableView dequeueReusableCellWithIdentifier:@"shopCarCell"];
    if (!cell) {
        cell = [[ShopCarTabCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"shopCarCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.backgroundColor = [UIColor whiteColor];
    }
    cell.cellModel = _dataSource[indexPath.section];
    [cell.selectBtn addTarget:self action:@selector(selectCurrentCell:) forControlEvents:UIControlEventTouchUpInside];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return TabCellHeight;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section==0) {
        if (_orderPromotionArr.count>0) {
            return _orderPromotionArr.count*40+10;
        } else {
            return 0.01;
        }
    } else {
        return 0.01;
    }
}

- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    UIView *view;
    
    if (section==0) {
        
        view = (UIView *)[self.orderProView objectForKey:[NSString stringWithFormat:@"订单优惠%ld",(long)section]];
        
        if (view) {
            
        } else {
            view = [[UIView alloc] init];
            if (_orderPromotionArr.count>0) {
                for (int i = 0; i<_orderPromotionArr.count; i++) {
                    UIView *bView = [[UIView alloc] initWithFrame:CGRectMake(0, 40*i, WIDTH, 40)];
                    bView.backgroundColor = [UIColor whiteColor];
                    [view addSubview:bView];
                    NSDictionary *dic = _orderPromotionArr[i];
                    
                    NSDictionary *attributes = @{NSFontAttributeName: kFont12Size};
                    CGSize tagSize = [dic[@"desc_tag"] boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, 18) options:NSStringDrawingUsesLineFragmentOrigin attributes:attributes context:nil].size;
                    
                    UILabel *tagLab = [[UILabel alloc] initWithFrame:CGRectMake(10, 11, tagSize.width+4, 18)];
                    tagLab.font = kFont11Size;
                    tagLab.layer.borderWidth = 0.5;
                    tagLab.layer.borderColor = [UIColor brownColor].CGColor;
                    tagLab.textAlignment = NSTextAlignmentCenter;
                    tagLab.textColor = [UIColor brownColor];
                    tagLab.text = dic[@"desc_tag"];
                    [bView addSubview:tagLab];
                    
                    UILabel *contentLab = [[UILabel alloc] initWithFrame:CGRectMake(tagLab.maxX+5, 10, WIDTH-30-tagSize.width, 20)];
                    contentLab.textColor = LightBlackColor;
                    contentLab.font = kFont13Size;
                    contentLab.text = dic[@"solution"];
                    [bView addSubview:contentLab];
                }
            }
            [self.orderProView setObject:view forKey:[NSString stringWithFormat:@"订单优惠%ld",(long)section]];
        }
    }
    
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}

//先要设Cell可编辑
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    return YES;
}

//定义编辑样式
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath {
    return UITableViewCellEditingStyleDelete;
}

//进入编辑模式，按下出现的编辑按钮后
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    ShopCarModel *model = _dataSource[indexPath.section];
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        
        [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载 //开始加载
        
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             [UserInfo share].userID, @"memberID",
                             model.ident, @"objIdent",
                             nil];
        [[NetworkManager sharedManager] postJSON:URL_DeleteCart parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
            
            [JHHJView hideLoading]; //结束加载
            
            if (status == Request_Success) {
                [Utils showToast:@"删除成功"];
                [self getData];
            }
        }];
    }
}

//修改编辑按钮文字
- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return @"删除";
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    ShopCarModel *model = _dataSource[indexPath.section];
    //[BaseWebVC showWithContro:self withUrlStr:model.url withTitle:@"商品详情"];
    
    CGRect descRec = CGRectMake(0, 0, WIDTH, WIDTH); //目的位置
    
    CGRect originalRec;
    UIImageView *imageView = nil;
    ShopCarTabCell *firstCell = (ShopCarTabCell *)[tableView cellForRowAtIndexPath:indexPath];
    
    originalRec = [firstCell.imageV convertRect:firstCell.imageV.frame toView:self.view];
    originalRec = CGRectMake(originalRec.origin.x-40, originalRec.origin.y-10, originalRec.size.width, originalRec.size.height);
    imageView = firstCell.imageV;
    
    GoodsModel *goodsModel = [[GoodsModel alloc] init];
    goodsModel.ID = model.goods_id;
    goodsModel.icon = model.thumbnail_url;
    goodsModel.imageView = imageView;
    goodsModel.descRec = descRec;
    goodsModel.originalRec = originalRec;
    
    GoodsDetailVC *goodsDetailVC = [[GoodsDetailVC alloc] init];
    goodsDetailVC.goodsModel = goodsModel;
    BaseNC *baseNC = (BaseNC *)self.navigationController;
    [baseNC pushViewController:goodsDetailVC imageView:goodsModel.imageView desRec:goodsModel.descRec original:goodsModel.originalRec deleagte:goodsDetailVC isAnimation:YES];
}

- (void)selectCurrentCell:(UIButton *)sender{
    sender.selected = !sender.selected;
    ShopCarTabCell *cell = (ShopCarTabCell *)sender.superview.superview;
    NSIndexPath *indexPath = [self.tableView indexPathForCell:cell];
    ShopCarModel *model = _dataSource[indexPath.section];
    model.isSelected = sender.selected;
    [self updateDataForUI];
}

- (void)selectAllGoods:(UIButton *)sender{
    sender.selected = !sender.selected;
    for (NSInteger i = 0; i < _dataSource.count; i ++) {
        ShopCarModel *model = _dataSource[i];
        model.isSelected = sender.selected;
    }
    [self updateDataForUI];
    [self.tableView reloadData];
}

- (void)updateDataForUI{
    allPrice = 0;
    allID = @"";
    allCount = 0;
    allGoodsCount = 0;
    [goodsIDArr removeAllObjects];
    
    for (NSInteger i = 0; i < _dataSource.count; i ++) {
        ShopCarModel *model = _dataSource[i];
        if (model.isSelected) {
            allPrice = allPrice + [model.buy_price floatValue]*[model.quantity integerValue];
            allID = [allID stringByAppendingFormat:@"%@,",model.goods_id];
            allCount ++;
            allGoodsCount += [model.quantity integerValue];
            [goodsIDArr addObject:model.ident];
        }
    }
    if (allID.length>0) {
        allID = [allID substringToIndex:allID.length-1];
    }
    if (allCount==_dataSource.count) {
        _selectAllBtn.selected = YES;
    }else{
        _selectAllBtn.selected = NO;
    }
    _selectLabel.text = [NSString stringWithFormat:@"已选 (%ld)",allGoodsCount];
    _priceLabel.text = [NSString stringWithFormat:@"合计：¥%.2f",allPrice];
    if (allCount==0) {
        _createOrderBtn.backgroundColor = kColorFromRGBHex(0xcccccc);
        _createOrderBtn.enabled = NO;
    }else{
        _createOrderBtn.backgroundColor = ButtonBgColor;
        _createOrderBtn.enabled = YES;
    }
    
}

#pragma mark - methods

#pragma mark - 下单

- (void)_createOrderBtnClick:(UIButton *)sender{
    
    //如果用户ID存在的话，说明已登陆
    if ([Utils isUserLogin]) {
        NSData *data=[NSJSONSerialization dataWithJSONObject:goodsIDArr options:NSJSONWritingPrettyPrinted error:nil];
        NSString *jsonStr=[[NSString alloc]initWithData:data encoding:NSUTF8StringEncoding];
        
//        NSString *goodsIdsStr = [NSString stringWithFormat:@"%@?goods=%@",HTML_OrderConfirmPage,jsonStr];
//        NSLog(@"下单订单地址：%@",goodsIdsStr);
//        [BaseWebVC showWithContro:self withUrlStr:goodsIdsStr withTitle:@"" isPresent:NO];
        
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             [UserInfo share].userID, @"memberID",
                             nil];
        [[NetworkManager sharedManager] postJSON:URL_GetOrderAddress parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
            
            [JHHJView hideLoading]; //结束加载
            
            if (status == Request_Success) {
                [[NSUserDefaults standardUserDefaults] setBool:NO forKey:@"ImageJumpAnimation"];
                
                NSMutableArray *dataArr = [AddressModel mj_objectArrayWithKeyValuesArray:responseData];
                if (dataArr.count==0) {
                    //跳新建地址页
                    EditAddressVC *editAddressVC = [[EditAddressVC alloc] init];
                    editAddressVC.from = @"购物车";
                    editAddressVC.goodIdent = jsonStr;
                    [self.navigationController pushViewController:editAddressVC animated:YES];
                } else {
                    //跳订单确认页
                    OrderConfirmVC *orderConfirmVC = [[OrderConfirmVC alloc] init];
                    orderConfirmVC.hidesBottomBarWhenPushed = YES;
                    orderConfirmVC.from = @"购物车";
                    orderConfirmVC.goodIdent = jsonStr;
                    [self.navigationController pushViewController:orderConfirmVC animated:YES];
                }
            }
        }];
    } else {
        //跳到登录页面
        LoginVC *loginVC = [[LoginVC alloc] init];
        loginVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:loginVC animated:YES];
    }
}

//清空购物车
- (void)clearShoppingCart {
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:nil message:@"要清空购物车？" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addAction:([UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
        
    }])];
    [alertController addAction:([UIAlertAction actionWithTitle:@"清空" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载 //开始加载
        
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             [UserInfo share].userID, @"memberID",
                             @"", @"objIdent",
                             nil];
        [[NetworkManager sharedManager] postJSON:URL_DeleteCart parameters:dic imagePath:nil completion:^(id responseData, RequestState status, NSError *error) {
            
            [JHHJView hideLoading]; //结束加载
            
            if (status == Request_Success) {
                [Utils showToast:@"清空购物车成功"];
                [self getData];
            }
        }];
    }])];
    [self presentViewController:alertController animated:true completion:nil];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
