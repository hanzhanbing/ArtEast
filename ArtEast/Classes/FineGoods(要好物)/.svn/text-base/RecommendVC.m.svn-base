//
//  RecommendVC.m
//  ArtEast
//
//  Created by yibao on 16/11/28.
//  Copyright © 2016年 北京艺宝网络文化有限公司. All rights reserved.
//

#import "RecommendVC.h"
#import "SearchVC.h"
#import <WebKit/WebKit.h>
#import "WKDelegateController.h"
#import "AEUpdateView.h"
#import "AEShareView.h"
#import "AppDelegate.h"
#import <UIButton+AFNetworking.h>
#import "BaseWebVC.h"
#import <MJRefresh.h>
#import "GoodsListViewController.h"

@interface RecommendVC ()<WKUIDelegate,WKNavigationDelegate,WKDelegate,RefreshDelegate,UITableViewDelegate,UITableViewDataSource>
{
    WKWebView *_webView;
    WKUserContentController *_userContentController;
    DefaultView *_defaultView;
    NSString *_webUrl;
    UIButton *_timerBtn;
    NSString *_linkUrl;
    
    BOOL isHidden;
}
@end

@implementation RecommendVC

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [[NSUserDefaults standardUserDefaults] setBool:NO forKey:@"RecommendWebDone"];
    //清除缓存
    //[Utils clearCache];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = PageColor;
    
    [self blankView]; //空白页
    [self initView]; //首页H5
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshH5) name:kLoginSuccNotification object:nil]; //登录成功
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshH5) name:kLogoutSuccNotification object:nil]; //注销成功
}

#pragma mark - 刷新H5

-(void)refreshH5 {
    //清除缓存，刷新网页
    //[Utils clearCache];
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:_webUrl] cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:30]];
}

#pragma mark - 动画下拉刷新/上拉加载更多

- (void)webViewGifHeaderWithRefreshingBlock:(void(^)()) block {
    
    //设置即将刷新状态的动画图片
    NSMutableArray *refreshingImages = [NSMutableArray array];
    for (NSInteger i = 1; i<=21; i++) {
        UIImage *image = [UIImage imageNamed:[NSString stringWithFormat:@"ic_refresh_image_0%zd",i]];
        [refreshingImages addObject:image];
    }
    
    MJRefreshGifHeader *gifHeader = [MJRefreshGifHeader headerWithRefreshingBlock:^{
        //下拉刷新要做的操作
        block();
    }];
    
    //是否显示刷新状态和刷新时间
    gifHeader.stateLabel.hidden = YES;
    gifHeader.lastUpdatedTimeLabel.hidden = YES;
    
    [gifHeader setImages:@[refreshingImages[0]] forState:MJRefreshStateIdle];
    [gifHeader setImages:refreshingImages forState:MJRefreshStatePulling];
    [gifHeader setImages:refreshingImages forState:MJRefreshStateRefreshing];
    _webView.scrollView.mj_header = gifHeader;
}

#pragma mark - init view

- (void)initView {
//    UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, 0.5)];
//    lineView.backgroundColor = kColorFromRGBHex(0xe6e6e6);
//    [self.view addSubview:lineView];
    
    //配置环境
    WKWebViewConfiguration * configuration = [[WKWebViewConfiguration alloc]init];
    _userContentController =[[WKUserContentController alloc]init];
    configuration.userContentController = _userContentController;
    _webView = [[WKWebView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, HEIGHT-106-49) configuration:configuration];
    _webView.opaque = NO; //不设置这个值 页面背景始终是白色
    _webView.backgroundColor = [UIColor clearColor];
    //注册方法
    WKDelegateController *delegateController = [[WKDelegateController alloc]init];
    delegateController.delegate = self;
    [_userContentController addScriptMessageHandler:delegateController name:@"goGoodsDetails"]; //跳到原生商品详情
    _webView.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;
    _webView.UIDelegate = self;
    _webView.navigationDelegate = self;
    _webUrl = HTML_HomePage;
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:_webUrl] cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:30]];
    [self.view addSubview:_webView];
    
    //动画下拉刷新
    [self webViewGifHeaderWithRefreshingBlock:^{
        isHidden = YES;
        [self refreshH5];
    }];
    
    //[_webView.scrollView.mj_header beginRefreshing];
}

// 记得取消监听
- (void)dealloc {
    [_userContentController removeScriptMessageHandlerForName:@"goGoodsDetails"];
}

#pragma mark - UITableViewDelegate, UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 0;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return CGFLOAT_MIN;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return CGFLOAT_MIN;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return CGFLOAT_MIN;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    NSString *ID = @"recommendCell";
    UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:ID];
    
    return cell;
}

#pragma mark - OC调用JS

// 页面加载完成之后调用
- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation{
    if (self.endLoadingBlock) {
        self.endLoadingBlock();
    }
    
    [[NSUserDefaults standardUserDefaults] setBool:YES forKey:@"RecommendWebDone"];
    
    NSDictionary *dic = @{@"memberId":[UserInfo share].userID.length>0?[UserInfo share].userID:@"false"};
    [_webView evaluateJavaScript:[NSString stringWithFormat:@"getIos('%@');",[Utils dictionaryToJson:dic]] completionHandler:^(id _Nullable result, NSError * _Nullable error) {
        //NSLog(@"js返回结果%@",result);
    }];
}

#pragma mark - JS调用OC

// WKScriptMessageHandler
- (void)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message{
    NSLog(@"name:%@\\\\n body:%@\\\\n frameInfo:%@\\\\n",message.name,message.body,message.frameInfo);
    
    if ([message.name isEqualToString:@"goGoodsDetails"]) { //跳原生商品详情
        GoodsModel *goodsModel = [[GoodsModel alloc] init];
        goodsModel.icon = @"";
        goodsModel.ID = message.body[@"id"];
        if (self.detailBlock) {
            self.detailBlock(goodsModel);
        }
    }
}

#pragma mark - WKNavigationDelegate

// 页面开始加载时调用
- (void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation{
    if (isHidden == NO) {
        [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载
    }
}

// 当内容开始返回时调用
- (void)webView:(WKWebView *)webView didCommitNavigation:(WKNavigation *)navigation{
    [_webView.scrollView.mj_header endRefreshing];
    _webView.backgroundColor = [UIColor whiteColor];
}

// 页面加载失败时调用
- (void)webView:(WKWebView *)webView didFailProvisionalNavigation:(null_unspecified WKNavigation *)navigation withError:(NSError *)error {
    if (self.endLoadingBlock) {
        self.endLoadingBlock();
    }
    //    _webView.hidden = YES;
    //    _defaultView.hidden = NO;
    //    _defaultView.imgView.image = [UIImage imageNamed:@"NoNetwork"];
    //    _defaultView.lab.text = @"网络状态待提升，点击重试";
}

// 在收到响应后，决定是否跳转
- (void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler{
    
    decisionHandler(WKNavigationResponsePolicyAllow); //允许跳转
}

// 在发送请求之前，决定是否跳转
- (void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler{
    
    NSString *url = navigationAction.request.URL.absoluteString;
    
    if (url.length>0) {
        if (![url isEqualToString:_webUrl]) {
            decisionHandler(WKNavigationActionPolicyCancel); //不允许跳转
            
            if (self.detailWebBlock) {
                self.detailWebBlock(url);
            }
        } else {
            decisionHandler(WKNavigationActionPolicyAllow); //允许跳转
        }
    }
}

#pragma mark - WKUIDelegate

// 创建一个新的WebView
- (WKWebView *)webView:(WKWebView *)webView createWebViewWithConfiguration:(WKWebViewConfiguration *)configuration forNavigationAction:(WKNavigationAction *)navigationAction windowFeatures:(WKWindowFeatures *)windowFeatures{
    return [[WKWebView alloc]init];
}

// 输入框
- (void)webView:(WKWebView *)webView runJavaScriptTextInputPanelWithPrompt:(NSString *)prompt defaultText:(nullable NSString *)defaultText initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(NSString * __nullable result))completionHandler{
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:prompt message:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
        textField.text = defaultText;
    }];
    [alertController addAction:([UIAlertAction actionWithTitle:@"完成" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(alertController.textFields[0].text?:@"");
    }])];
}

// 确认框
- (void)webView:(WKWebView *)webView runJavaScriptConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(BOOL result))completionHandler{
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:message?:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addAction:([UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(NO);
    }])];
    [alertController addAction:([UIAlertAction actionWithTitle:@"确认" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(YES);
    }])];
    [self presentViewController:alertController animated:YES completion:nil];
}

// 警告框
- (void)webView:(WKWebView *)webView runJavaScriptAlertPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(void))completionHandler{
    NSLog(@"%@",message);
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:message?:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addAction:([UIAlertAction actionWithTitle:@"确认" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler();
    }])];
    [self presentViewController:alertController animated:YES completion:nil];
}

#pragma mark - 网络

//有网络了
//- (void)netWorkAppear
//{
//    [super netWorkAppear];
//
//    [self refresh];
//}

//无网
- (void)blankView {
    _defaultView = [[DefaultView alloc] initWithFrame:CGRectMake(0, 0.5, WIDTH, HEIGHT-106-49-0.5)];
    _defaultView.delegate = self;
    _defaultView.hidden = YES;
    [self.view addSubview:_defaultView];
}

#pragma mark - RefreshDelegate

- (void)refresh {
    _defaultView.hidden = YES;
    _webView.hidden = NO;
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:_webUrl] cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:30]];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
