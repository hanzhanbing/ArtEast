//
//  BaseWebVC.m
//  ArtEast
//
//  Created by yibao on 16/10/17.
//  Copyright © 2016年 北京艺宝网络文化有限公司. All rights reserved.
//

#import "BaseWebVC.h"
#import <WebKit/WebKit.h>
#import "WKDelegateController.h"
#import "AEShareView.h"
#import "LoginVC.h"
#import "ChoosePayVC.h"
#import "OrderModel.h"
#import "SearchVC.h"
#import "ShoppingCartVC.h"
#import <MJRefresh.h>
#import "GoodsListViewController.h"
#import "GoodsDetailVC.h"
#import "BaseNC.h"

@interface BaseWebVC ()<WKUIDelegate,WKNavigationDelegate,WKDelegate,RefreshDelegate,UISearchBarDelegate>

@property (strong, nonatomic) WKWebView *webView;
@property (strong, nonatomic) UIProgressView *progressView;
@property (strong, nonatomic) WKUserContentController *userContentController;
@property (strong, nonatomic) DefaultView *defaultView;
@property (strong, nonatomic) NSString *jumpActionName;

@property (strong, nonatomic) NSMutableDictionary *goodsShareDic;

@end

@implementation BaseWebVC

/** 传入控制器、url、标题 */
+ (void)showWithContro:(UIViewController *)contro withUrlStr:(NSString *)urlStr withTitle:(NSString *)title isPresent:(BOOL)isPresent withShareContent:(NSString *)shareContent{
    BaseWebVC *webVC = [[BaseWebVC alloc] init];
    webVC.homeUrl = urlStr;
    webVC.webTitle = title;
    webVC.isPresent = isPresent;
    webVC.shareContent = shareContent;
    if (isPresent==YES) {
        [contro presentViewController:webVC animated:YES completion:nil];
    } else {
        webVC.hidesBottomBarWhenPushed = YES;
        [contro.navigationController pushViewController:webVC animated:YES];
    }
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    //[Utils clearCache]; //清除缓存
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    //self.title = _webTitle;
    
    [self configUI];
    
    [self blankView];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshH5) name:kLoginSuccNotification object:nil]; //登录成功
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshH5) name:kLogoutSuccNotification object:nil]; //注销成功
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshH5) name:kWebViewRefreshNotification object:nil]; //网页刷新通知
}

#pragma mark - 刷新H5

-(void)refreshH5 {
    //清除缓存，刷新网页
    //[Utils clearCache];
    [_webView reload];
}

#pragma mark - 动画下拉刷新/上拉加载更多

- (void)webViewGifHeaderWithRefreshingBlock:(void(^)()) block {
    
    //设置即将刷新状态的动画图片
    NSMutableArray *refreshingImages = [NSMutableArray array];
    for (NSInteger i = 1; i<=21; i++) {
        UIImage *image = [UIImage imageNamed:[NSString stringWithFormat:@"ic_refresh_image_0%zd",i]];
        [refreshingImages addObject:image];
    }
    
    MJRefreshGifHeader *gifHeader = [MJRefreshGifHeader headerWithRefreshingBlock:^{
        //下拉刷新要做的操作
        block();
    }];
    
    //是否显示刷新状态和刷新时间
    gifHeader.stateLabel.hidden = YES;
    gifHeader.lastUpdatedTimeLabel.hidden = YES;
    
    [gifHeader setImages:@[refreshingImages[0]] forState:MJRefreshStateIdle];
    [gifHeader setImages:refreshingImages forState:MJRefreshStatePulling];
    [gifHeader setImages:refreshingImages forState:MJRefreshStateRefreshing];
    _webView.scrollView.mj_header = gifHeader;
}

- (void)configUI {
    // 进度条
    _progressView = [[UIProgressView alloc] initWithFrame:CGRectMake(0, 64, WIDTH, 0)];
    _progressView.hidden = YES;
    _progressView.tintColor = AppThemeColor;
    _progressView.trackTintColor = [UIColor whiteColor];
    [self.view addSubview:_progressView];
    
    //配置环境
    WKWebViewConfiguration * configuration = [[WKWebViewConfiguration alloc]init];
    _userContentController =[[WKUserContentController alloc]init];
    configuration.userContentController = _userContentController;
    _webView = [[WKWebView alloc] initWithFrame:CGRectMake(0, 64, WIDTH, HEIGHT-64) configuration:configuration];
    //注册方法
    WKDelegateController *delegateController = [[WKDelegateController alloc]init];
    delegateController.delegate = self;
    [_userContentController addScriptMessageHandler:delegateController name:@"sharesComment"]; //发现--评论分享
    [_userContentController addScriptMessageHandler:delegateController name:@"shareDetails"]; //发现--详情分享
    [_userContentController addScriptMessageHandler:delegateController name:@"share"]; //商品详情分享
    [_userContentController addScriptMessageHandler:delegateController name:@"return"]; //添加地址返回
    [_userContentController addScriptMessageHandler:delegateController name:@"notlogged"]; //商品详情用户没有登录
    [_userContentController addScriptMessageHandler:delegateController name:@"refresh"]; //发现内容评论列表点击发表
    [_userContentController addScriptMessageHandler:delegateController name:@"refreshs"]; //发现内容评论列表点击发表
    [_userContentController addScriptMessageHandler:delegateController name:@"shopping"]; //商品详情跳转购物车
    [_userContentController addScriptMessageHandler:delegateController name:@"goGoodsDetails"]; //跳到商品详情
    [_userContentController addScriptMessageHandler:delegateController name:@"contentHref"]; //跳原生列表
    [_userContentController addScriptMessageHandler:delegateController name:@"weChatAlipay"]; //支付宝、微信支付
    _webView.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;
    _webView.backgroundColor = [UIColor whiteColor];
    _webView.navigationDelegate = self;
    _webView.UIDelegate = self;
    [self.view insertSubview:_webView belowSubview:_progressView];
    
    //KVO 进度及title、滑动距离
    //[_webView addObserver:self forKeyPath:@"estimatedProgress" options:NSKeyValueObservingOptionNew context:nil];
    [_webView addObserver:self forKeyPath:@"title" options:NSKeyValueObservingOptionNew context:nil];
    [_webView.scrollView addObserver:self forKeyPath:@"contentOffset" options:NSKeyValueObservingOptionNew context:nil];
    
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:[Utils urlEncoding:_homeUrl]] cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:30]];
    
//    _webView.alpha = 0;
    
    self.webView.scrollView.decelerationRate = UIScrollViewDecelerationRateNormal;
    
//    //动画下拉刷新
//    [self webViewGifHeaderWithRefreshingBlock:^{
//        [self refreshH5];
//    }];
}

// 记得取消监听
- (void)dealloc {
    
    //[_webView removeObserver:self forKeyPath:@"estimatedProgress"];
    [_webView removeObserver:self forKeyPath:@"title"];
    [_userContentController removeScriptMessageHandlerForName:@"sharesComment"];
    [_userContentController removeScriptMessageHandlerForName:@"shareDetails"];
    [_userContentController removeScriptMessageHandlerForName:@"share"];
    [_userContentController removeScriptMessageHandlerForName:@"return"];
    [_userContentController removeScriptMessageHandlerForName:@"notlogged"];
    [_userContentController removeScriptMessageHandlerForName:@"refresh"];
    [_userContentController removeScriptMessageHandlerForName:@"refreshs"];
    [_webView.scrollView removeObserver:self forKeyPath:@"contentOffset"];
    [_userContentController removeScriptMessageHandlerForName:@"shopping"];
    [_userContentController removeScriptMessageHandlerForName:@"goGoodsDetails"];
    [_userContentController removeScriptMessageHandlerForName:@"weChatAlipay"];
    [_userContentController removeScriptMessageHandlerForName:@"contentHref"];
}

#pragma mark - 返回事件

// 返回按钮点击
- (void)backAction {
    if (self.isPresent==YES) {
        [self dismissViewControllerAnimated:YES completion:nil];
    } else {
        [self.navigationController popViewControllerAnimated:YES];
    }
}

#pragma mark - 商品详情分享
- (void)shareAction {
    _goodsShareDic = [NSMutableDictionary dictionary];
//    if (_imagesUrlArr.count>0) {
//        [_goodsShareDic setObject:_imagesUrlArr[0] forKey:@"image"];
//    } else {
        [_goodsShareDic setObject:@"http://images-app.cydf.com/public/120-1.png" forKey:@"image"];
//    }
    [_goodsShareDic setObject:[NSString stringWithFormat:@"%@?from=app",self.homeUrl] forKey:@"url"];
    [_goodsShareDic setObject:_webView.title forKey:@"title"];
    [_goodsShareDic setObject:[Utils isBlankString:self.shareContent]?@"":self.shareContent forKey:@"text"];
    AEShareView *shareView = [[AEShareView alloc] initWithBaseController:self andBaseView:self.view andData:_goodsShareDic andType:ShareUrl];
    [shareView show];
}

#pragma mark - UISearchBarDelegate

//跳转到搜索页面
- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar {
    SearchVC *searchVC = [[SearchVC alloc] init];
    searchVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:searchVC animated:YES];
    
    return NO;
}

#pragma mark - OC调用JS

// 页面加载完成之后调用
- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation{
    [JHHJView hideLoading]; //结束加载
//    _webView.alpha = 1;
    
    NSDictionary *dic = @{@"memberId":[UserInfo share].userID.length>0?[UserInfo share].userID:@"false"};
    [_webView evaluateJavaScript:[NSString stringWithFormat:@"getIos('%@');",[Utils dictionaryToJson:dic]] completionHandler:^(id _Nullable result, NSError * _Nullable error) {
        //NSLog(@"js返回结果%@",result);
    }];
    
    //这里是js，主要目的实现对url的获取
    static NSString *const jsGetImages =
    @"function getImages(){\
    var objs = document.getElementsByTagName(\"img\");\
    var imgScr = '';\
    for(var i=0;i<objs.length;i++){\
    imgScr = imgScr + objs[i].src + '+';\
    };\
    return imgScr;\
    };";
    
    [_webView evaluateJavaScript:jsGetImages completionHandler:^(id item, NSError * _Nullable error) {
        // 执行结果回调
    }];
    
    [_webView evaluateJavaScript:@"getImages()" completionHandler:^(id item, NSError * _Nullable error) {
        //urlResurlt 就是获取到得所有图片的url的拼接；_imagesUrlArr就是所有Url的数组
        NSString *urlResurlt = item;
        _imagesUrlArr = [NSMutableArray arrayWithArray:[urlResurlt componentsSeparatedByString:@"+"]];
        
        NSLog(@"获取网页图片数组：%@",item);
    }];
}

#pragma mark - JS调用OC

// WKScriptMessageHandler
- (void)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message{
    NSLog(@"name:%@\\\\n body:%@\\\\n frameInfo:%@\\\\n",message.name,message.body,message.frameInfo);
    
    if ([message.name isEqualToString:@"sharesComment"] || [message.name isEqualToString:@"shareDetails"]) {
        NSString *shareUrl = message.body[@"url"];
        shareUrl = [Utils isBlankString:shareUrl]?@"":shareUrl;
        NSString *sharePic = message.body[@"pic"];
        sharePic = [Utils isBlankString:sharePic]?@"":sharePic;
        NSString *shareTit = message.body[@"tit"];
        shareTit = [Utils isBlankString:shareTit]?@"":shareTit;
        
        NSMutableDictionary *paramDic = [[NSMutableDictionary alloc] init];
        [paramDic setObject:[NSString stringWithFormat:@"%@%@",PictureUrl,sharePic] forKey:@"image"];
        [paramDic setObject:shareUrl forKey:@"url"];
        [paramDic setObject:shareTit forKey:@"title"];
        [paramDic setObject:@"我在佑生活发现一篇超级好的文章，赶快来看看吧" forKey:@"text"];
        
        AEShareView *shareView = [[AEShareView alloc] initWithBaseController:self andBaseView:self.view andData:paramDic andType:ShareUrl];
        [shareView show];
    }
    
//    if ([message.name isEqualToString:@"share"]) { //商品详情分享
//        NSString *shareUrl = message.body[@"url"];
//        shareUrl = [Utils isBlankString:shareUrl]?@"":shareUrl;
//        NSString *sharePic = message.body[@"pic"];
//        sharePic = [Utils isBlankString:sharePic]?@"":sharePic;
//        NSString *shareTit = message.body[@"tit"];
//        shareTit = [Utils isBlankString:shareTit]?@"":shareTit;
//        
//        _goodsShareDic = [NSMutableDictionary dictionary];
//        [_goodsShareDic setObject:[NSString stringWithFormat:@"%@%@",PictureUrl,sharePic] forKey:@"image"];
//        [_goodsShareDic setObject:shareUrl forKey:@"url"];
//        [_goodsShareDic setObject:shareTit forKey:@"title"];
//        [_goodsShareDic setObject:@"我在佑生活发现一个超级好的商品，赶快来看看吧" forKey:@"text"];
//    }
    
    if ([message.name isEqualToString:@"return"]) { //返回
        [self backAction];
        [[NSNotificationCenter defaultCenter] postNotificationName:kWebViewRefreshNotification object:nil];
    }
    
    if ([message.name isEqualToString:@"notlogged"]) { //登录
        //跳到登录页面
        LoginVC *loginVC = [[LoginVC alloc] init];
        loginVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:loginVC animated:YES];
    }
    
    if ([message.name isEqualToString:@"refresh"]) {
        [_webView reload];
    }
    
    if ([message.name isEqualToString:@"refreshs"]) {
        [_webView reload];
    }
    
    if ([message.name isEqualToString:@"shopping"]) { //跳到购物车
        //self.tabBarController.selectedIndex = 3;
        
        ShoppingCartVC *shoppingCartVC = [[ShoppingCartVC alloc] init];
        shoppingCartVC.hidesBottomBarWhenPushed = YES;
        shoppingCartVC.isTabbarHidder = YES;
        [self.navigationController pushViewController:shoppingCartVC animated:YES];
    }
    
    if ([message.name isEqualToString:@"goGoodsDetails"]) { //跳商品详情
        GoodsModel *goodsModel = [[GoodsModel alloc] init];
        goodsModel.icon = @"";
        goodsModel.ID = message.body[@"id"];
        GoodsDetailVC *goodsDetailVC = [[GoodsDetailVC alloc] init];
        goodsDetailVC.hidesBottomBarWhenPushed = YES;
        goodsDetailVC.goodsModel = goodsModel;
        goodsDetailVC.hideAnimation = YES;
        BaseNC *baseNC = (BaseNC *)self.navigationController;
        [baseNC pushViewController:goodsDetailVC imageView:goodsModel.imageView desRec:goodsModel.descRec original:goodsModel.originalRec deleagte:goodsDetailVC isAnimation:YES];
    }
    
    if ([message.name isEqualToString:@"contentHref"]) { //跳原生列表页
        
        NSString *result = message.body[@"href"];
        
        if (result.length>0) {
            //判断网址后面是否有参数
            NSArray *arr = [result componentsSeparatedByString:@"?"];
            if (arr.count>1) {
                
                NSString *page = arr[0];
                
                if ([page isEqualToString:@"list"]) {
                    NSMutableDictionary *urlParDic = [Utils subWebUrlParChangeDic:result];
                    
                    if ([[urlParDic allKeys] containsObject:@"keyid"]&&[[urlParDic allKeys] containsObject:@"caName"]) {
                        
                        NSString *cat_id = [urlParDic objectForKey:@"keyid"];
                        NSString *cat_name = [urlParDic objectForKey:@"caName"];
                        
                        GoodsListViewController *goodsListVC = [[GoodsListViewController alloc] init];
                        goodsListVC.hidesBottomBarWhenPushed = YES;
                        goodsListVC.virtual_cat_id = cat_id;
                        goodsListVC.virtual_cat_name = cat_name;
                        [self.navigationController pushViewController:goodsListVC animated:YES];
                    }
                }
            }
        }
    }
    
    if ([message.name isEqualToString:@"weChatAlipay"]) { //支付宝、微信支付
        ChoosePayVC *choosePayVC = [[ChoosePayVC alloc] init];
        OrderModel *order = [[OrderModel alloc] init];
        order.ID = message.body[@"payment_order_id"];
        order.type = UnPayOrderType;
        choosePayVC.order = order;
        choosePayVC.fromFlag = @"跳转";
        [self.navigationController pushViewController:choosePayVC animated:YES];
    }
}

// 在发送请求之前，决定是否跳转
- (void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler{
    
    NSString *url = navigationAction.request.URL.absoluteString;
    
    url = [Utils urlDecoding:url];
    
    if (url.length>0) {
        if (![url isEqualToString:_homeUrl]) {
            decisionHandler(WKNavigationActionPolicyCancel); //不允许跳转
            
            BaseWebVC *webVC = [[BaseWebVC alloc] init];
            webVC.homeUrl = navigationAction.request.URL.absoluteString;
            [self.navigationController pushViewController:webVC animated:YES];
        } else {
            decisionHandler(WKNavigationActionPolicyAllow); //允许跳转
        }
    }
    
}

// 在收到响应后，决定是否跳转
- (void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler{
    
    decisionHandler(WKNavigationResponsePolicyAllow); //允许跳转
}

#pragma mark - WKNavigationDelegate

// 页面开始加载时调用
- (void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation{
    [JHHJView showLoadingOnTheKeyWindowWithType:JHHJViewTypeSingleLine]; //开始加载
}

// 当内容开始返回时调用
- (void)webView:(WKWebView *)webView didCommitNavigation:(WKNavigation *)navigation{
    
}

// 页面加载失败时调用
- (void)webView:(WKWebView *)webView didFailProvisionalNavigation:(null_unspecified WKNavigation *)navigation withError:(NSError *)error {
    [JHHJView hideLoading]; //结束加载
    //    _webView.hidden = YES;
    //    _defaultView.hidden = NO;
    //    _defaultView.imgView.image = [UIImage imageNamed:@"NoNetwork"];
    //    _defaultView.lab.text = @"网络状态待提升，点击重试";
}

// 接收到服务器跳转请求之后调用
- (void)webView:(WKWebView *)webView didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)navigation{
    
}

- (void)webView:(WKWebView *)webView didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler{
    
    if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]) {
    
        NSURLCredential *card = [[NSURLCredential alloc]initWithTrust:challenge.protectionSpace.serverTrust];
        completionHandler(NSURLSessionAuthChallengeUseCredential,card);
    }
}

#pragma mark - WKUIDelegate

// 创建一个新的WebView
- (WKWebView *)webView:(WKWebView *)webView createWebViewWithConfiguration:(WKWebViewConfiguration *)configuration forNavigationAction:(WKNavigationAction *)navigationAction windowFeatures:(WKWindowFeatures *)windowFeatures{
    return [[WKWebView alloc] init];
}

// 输入框
- (void)webView:(WKWebView *)webView runJavaScriptTextInputPanelWithPrompt:(NSString *)prompt defaultText:(nullable NSString *)defaultText initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(NSString * __nullable result))completionHandler{
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:prompt message:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
        textField.text = defaultText;
        textField.delegate = self;
    }];
    [alertController addAction:([UIAlertAction actionWithTitle:@"完成" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(alertController.textFields[0].text?:@"");
    }])];
}

// 确认框
- (void)webView:(WKWebView *)webView runJavaScriptConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(BOOL result))completionHandler{
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:message?:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addAction:([UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(NO);
    }])];
    [alertController addAction:([UIAlertAction actionWithTitle:@"确认" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler(YES);
    }])];
    [self presentViewController:alertController animated:YES completion:nil];
}

// 警告框
- (void)webView:(WKWebView *)webView runJavaScriptAlertPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(void))completionHandler{
    NSLog(@"%@",message);
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:message?:@"" preferredStyle:UIAlertControllerStyleAlert];
    [alertController addAction:([UIAlertAction actionWithTitle:@"确认" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        completionHandler();
    }])];
    [self presentViewController:alertController animated:YES completion:nil];
}

#pragma mark - WKWebView KVO

// 计算WKWebView进度条
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context {
    
    if (object == _webView) {
        
        if ([keyPath isEqualToString:@"estimatedProgress"]) {
            
            CGFloat newprogress = [[change objectForKey:NSKeyValueChangeNewKey] doubleValue];
            if (newprogress == 1) {
                self.progressView.hidden = YES;
                [self.progressView setProgress:0 animated:NO];
            } else {
                self.progressView.hidden = NO;
                [self.progressView setProgress:newprogress animated:YES];
            }
        }
        
        if ([keyPath isEqualToString:@"title"]) {
            
            if ([_webView.title isEqualToString:@"内容详情"]||[_webView.title isEqualToString:@"评论列表"]) {
                self.title = _webView.title;
                self.navItem.rightBarButtonItem = nil;
            } else if ([_webView.title isEqualToString:@"电商首页"]) {
                self.navItem.rightBarButtonItem = nil;
                //搜索框
                UISearchBar *searchBar = [[UISearchBar alloc] init];
                searchBar.delegate = self;
                searchBar.showsCancelButton = NO;
                searchBar.frame = CGRectMake(50, 22, WIDTH-70, 40);
                searchBar.searchBarStyle = UISearchBarStyleMinimal;
                searchBar.placeholder = @"有生活 才有家";
                [self.navBar addSubview: searchBar];
            } else {
                self.title = _webView.title;
                UIBarButtonItem *rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"Share"] style:UIBarButtonItemStylePlain target:self action:@selector(shareAction)];
                self.navItem.rightBarButtonItem = rightBarButtonItem;
            }
            
//            if ([_webView.title isEqualToString:@"订单确认"]) {
//                _webView.scrollView.scrollEnabled = NO;
//            } else {
//                _webView.scrollView.scrollEnabled = YES;
//            }
        }
        
        if ([keyPath isEqualToString:@"contentOffset"]) {
            CGFloat y = _webView.scrollView.contentOffset.y;
            //NSLog(@"滑动距离：%f",y);
            if (y>=0 && y<=64) {
                CGFloat nav_alpha = y/64;
                NSLog(@"透明度%f",nav_alpha);
                self.navBar.alpha = nav_alpha;
            }else if(y>64){
                self.navBar.alpha = 1.0;
            }else{
                self.navBar.alpha = 0.0;
            }
        }
    }
}

#pragma mark - 网络

//有网络了
//- (void)netWorkAppear
//{
//    [super netWorkAppear];
//
//    [self refresh];
//}

//无网
- (void)blankView {
    _defaultView = [[DefaultView alloc] initWithFrame:self.tableFrame];
    _defaultView.delegate = self;
    _defaultView.hidden = YES;
    [self.view addSubview:_defaultView];
}

#pragma mark - RefreshDelegate

- (void)refresh {
    _defaultView.hidden = YES;
    _webView.hidden = NO;
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:[Utils urlEncoding:_homeUrl]] cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:30]];
}

@end
